{"version":3,"sources":["components/Select.js","components/App.js","reportWebVitals.js","index.js"],"names":["Select","state","avalibleCurrencies","generateCurrenciesList","obj","Object","keys","map","key","index","value","fetch","method","headers","process","then","response","json","data","setState","currencies","catch","err","console","error","this","props","onChange","id","Component","APIKey","App","APIurlpart1","APIurlpart2","APIurlpart3","firstInputCurrency","secondInputCurrency","firstInputValue","secondInputValue","currencyRate","handleFirstInputChange","event","valueSecond","Math","round","target","handleSecondInputChange","valueFirst","handleOptionChange","firstCurrency","secondCurrency","currencyRateTmp","APIurlCurrencyRate","rates","rate","EUR","className","Input","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAqDeA,E,4MAhDbC,MAAQ,CACNC,mBAAoB,I,EAsBtBC,uBAAyB,WACvB,IAAIC,EAAM,EAAKH,MAAMC,mBAErB,OAAOG,OAAOC,KAAKF,GAAKG,KAAI,SAACC,EAAKC,GAChC,OACE,wBAAQC,MAAOF,EAAf,SACGJ,EAAII,IADkBC,O,uDAxB/B,WAAqB,IAAD,OAClBE,MAAM,2DAA4D,CAChEC,OAAQ,MACRC,QAAS,CACP,iBAXOC,qDAYP,kBAAmB,wCAGpBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZjB,mBAAoBgB,EAAKE,gBAG5BC,OAAM,SAACC,GACNC,QAAQC,MAAMF,Q,oBAgBpB,WACE,OACE,wBACEZ,MAAOe,KAAKC,MAAMhB,MAClBiB,SAAUF,KAAKC,MAAMC,SACrBC,GAAIH,KAAKC,MAAME,GAHjB,SAKGH,KAAKtB,+B,GA3CO0B,aCAfC,EAAShB,qDAETiB,E,4MACJC,YACE,gF,EACFC,YAAc,O,EACdC,YAAc,Y,EAEdjC,MAAQ,CACNkC,mBAAoB,MACpBC,oBAAqB,MACrBC,gBAAiB,GACjBC,iBAAkB,GAElBC,aAAc,I,EA2BhBC,uBAAyB,SAACC,GACxB,IAAMC,EACJC,KAAKC,MAAMH,EAAMI,OAAOnC,MAAQ,EAAKT,MAAMsC,aAAe,KAAO,IACnE,EAAKpB,SAAS,CACZkB,gBAAiBI,EAAMI,OAAOnC,MAC9B4B,iBAAkBI,K,EAItBI,wBAA0B,SAACL,GACzB,IAAMM,EACJJ,KAAKC,MAAOH,EAAMI,OAAOnC,MAAQ,EAAKT,MAAMsC,aAAgB,KAAO,IACrE,EAAKpB,SAAS,CACZkB,gBAAiBU,EACjBT,iBAAkBG,EAAMI,OAAOnC,S,EAInCsC,mBAAqB,SAACP,GACpB,IAAIQ,EACAC,EACAC,EAEoB,MAApBV,EAAMI,OAAOjB,IAEfqB,EAAgBR,EAAMI,OAAOnC,MAC7BwC,EAAiB,EAAKjD,MAAMmC,oBAC5B,EAAKjB,SAAS,CACZgB,mBAAoBM,EAAMI,OAAOnC,SAEN,MAApB+B,EAAMI,OAAOjB,KAEtBqB,EAAgB,EAAKhD,MAAMkC,mBAC3Be,EAAiBT,EAAMI,OAAOnC,MAC9B,EAAKS,SAAS,CACZiB,oBAAqBK,EAAMI,OAAOnC,SAKtC,IAAM0C,EACJ,EAAKpB,YACLiB,EACA,EAAKhB,YACLiB,EACA,EAAKhB,YAGPvB,MAAMyC,EAAoB,CACxBxC,OAAQ,MACRC,QAAS,CACP,iBAAkBiB,EAClB,kBAAmB,wCAGpBf,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,EAAKC,SAAS,CACZoB,aAAcrB,EAAKmC,MAAM,EAAKpD,MAAMmC,qBAAqBkB,OAE3DH,EAAkBjC,EAAKmC,MAAM,EAAKpD,MAAMmC,qBAAqBkB,QAE9DvC,MAAK,WACJ,EAAKI,SAAS,CACZmB,iBACEK,KAAKC,MAAM,EAAK3C,MAAMoC,gBAAkBc,EAAkB,KAC1D,SAGL9B,OAAM,SAACC,GACNC,QAAQC,MAAMF,O,uDA/FpB,WAAqB,IAAD,OAElBX,MACE,mGACA,CACEC,OAAQ,MACRC,QAAS,CACP,iBAAkBiB,EAClB,kBAAmB,wCAItBf,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,EAAKC,SAAS,CACZoB,aAAcrB,EAAKmC,MAAME,IAAID,UAGhCjC,OAAM,SAACC,GACNC,QAAQC,MAAMF,Q,oBA+EpB,WACE,OACE,gCACE,sBAAKkC,UAAU,qBAAf,UACE,uBAAMA,UAAU,wBAAhB,oCAC0B/B,KAAKxB,MAAMsC,gBAErC,kCACE,cAAC,EAAD,CACE7B,MAAOe,KAAKxB,MAAMoC,gBAClBV,SAAUF,KAAKe,yBAEjB,cAAC,EAAD,CACE9B,MAAOe,KAAKxB,MAAMkC,mBAClBR,SAAUF,KAAKuB,mBACfpB,GAAI,YAIV,qBAAK4B,UAAU,qBAAf,SACE,kCACE,cAAC,EAAD,CACE9C,MAAOe,KAAKxB,MAAMqC,iBAClBX,SAAUF,KAAKqB,0BAEjB,cAAC,EAAD,CACEpC,MAAOe,KAAKxB,MAAMmC,oBAClBT,SAAUF,KAAKuB,mBACfpB,GAAI,kB,GA9IAC,aAuJZ4B,EAAQ,SAAC/B,GACb,OAAO,uBAAOhB,MAAOgB,EAAMhB,MAAOiB,SAAUD,EAAMC,YAGrCI,ICrJA2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c8f0422.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst APIKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass Select extends Component {\r\n  state = {\r\n    avalibleCurrencies: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://currency-converter5.p.rapidapi.com/currency/list\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": APIKey,\r\n        \"x-rapidapi-host\": \"currency-converter5.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          avalibleCurrencies: data.currencies,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  generateCurrenciesList = () => {\r\n    let obj = this.state.avalibleCurrencies;\r\n\r\n    return Object.keys(obj).map((key, index) => {\r\n      return (\r\n        <option value={key} key={index}>\r\n          {obj[key]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select\r\n        value={this.props.value}\r\n        onChange={this.props.onChange}\r\n        id={this.props.id}\r\n      >\r\n        {this.generateCurrenciesList()}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Select from \"./Select.js\";\n\nconst APIKey = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n  APIurlpart1 =\n    \"https://currency-converter5.p.rapidapi.com/currency/convert?format=json&from=\";\n  APIurlpart2 = \"&to=\";\n  APIurlpart3 = \"&amount=1\";\n\n  state = {\n    firstInputCurrency: \"PLN\",\n    secondInputCurrency: \"EUR\",\n    firstInputValue: \"\",\n    secondInputValue: \"\",\n\n    currencyRate: \"\",\n  };\n\n  componentDidMount() {\n    // console.log(process.env.REACT_APP_API_KEY);\n    fetch(\n      \"https://currency-converter5.p.rapidapi.com/currency/convert?format=json&from=PLN&to=EUR&amount=1\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": APIKey,\n          \"x-rapidapi-host\": \"currency-converter5.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data);\n        this.setState({\n          currencyRate: data.rates.EUR.rate,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  handleFirstInputChange = (event) => {\n    const valueSecond =\n      Math.round(event.target.value * this.state.currencyRate * 100) / 100;\n    this.setState({\n      firstInputValue: event.target.value,\n      secondInputValue: valueSecond,\n    });\n  };\n\n  handleSecondInputChange = (event) => {\n    const valueFirst =\n      Math.round((event.target.value / this.state.currencyRate) * 100) / 100;\n    this.setState({\n      firstInputValue: valueFirst,\n      secondInputValue: event.target.value,\n    });\n  };\n\n  handleOptionChange = (event) => {\n    let firstCurrency;\n    let secondCurrency;\n    let currencyRateTmp;\n\n    if (event.target.id === \"1\") {\n      // console.log(\"znalazło id 1\");\n      firstCurrency = event.target.value;\n      secondCurrency = this.state.secondInputCurrency;\n      this.setState({\n        firstInputCurrency: event.target.value,\n      });\n    } else if (event.target.id === \"2\") {\n      // console.log(\"znalazło id 2\");\n      firstCurrency = this.state.firstInputCurrency;\n      secondCurrency = event.target.value;\n      this.setState({\n        secondInputCurrency: event.target.value,\n      });\n    }\n\n    //build API request\n    const APIurlCurrencyRate =\n      this.APIurlpart1 +\n      firstCurrency +\n      this.APIurlpart2 +\n      secondCurrency +\n      this.APIurlpart3;\n\n    // console.log(APIurlCurrencyRate);\n    fetch(APIurlCurrencyRate, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": APIKey,\n        \"x-rapidapi-host\": \"currency-converter5.p.rapidapi.com\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data);\n        this.setState({\n          currencyRate: data.rates[this.state.secondInputCurrency].rate,\n        });\n        currencyRateTmp = data.rates[this.state.secondInputCurrency].rate;\n      })\n      .then(() => {\n        this.setState({\n          secondInputValue:\n            Math.round(this.state.firstInputValue * currencyRateTmp * 100) /\n            100,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"input_label_wraper\">\n          <span className=\"current_exchange_rate\">\n            Current exchange rate: {this.state.currencyRate}\n          </span>\n          <label>\n            <Input\n              value={this.state.firstInputValue}\n              onChange={this.handleFirstInputChange}\n            />\n            <Select\n              value={this.state.firstInputCurrency}\n              onChange={this.handleOptionChange}\n              id={\"1\"}\n            />\n          </label>\n        </div>\n        <div className=\"input_label_wraper\">\n          <label>\n            <Input\n              value={this.state.secondInputValue}\n              onChange={this.handleSecondInputChange}\n            />\n            <Select\n              value={this.state.secondInputCurrency}\n              onChange={this.handleOptionChange}\n              id={\"2\"}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Input = (props) => {\n  return <input value={props.value} onChange={props.onChange} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}